<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:macro name="zed_camera" params="base_name pos_x pos_y pos_z rotate_camera camera_numb reshh resww" >

    <!-- Arguments -->


    <xacro:arg name="camera_name"   default="zed2" />
    <xacro:arg name="camera_model"  default="zed2" />
    <xacro:arg name="base_frame"    default="${base_name}" />
    <xacro:arg name="cam_roll"      default="0.0" />
    <xacro:arg name="cam_pitch"     default="0.0" />
    <xacro:arg name="cam_yaw"       default="0.0" />

    <!-- Properties -->
    <xacro:property name="M_PI"          value="3.1415926535897931" />
    <xacro:property name="model"         value="$(arg camera_model)" />
    <xacro:property name="cam_pos_x"     value="${pos_x}" />
    <xacro:property name="cam_pos_y"     value="${pos_y}" />
    <xacro:property name="cam_pos_z"     value="${pos_z}" />
    <xacro:property name="rotate"        value="${rotate_camera}" />
    <xacro:property name="numb"          value="${camera_numb}" />
    <xacro:property name="resh"          value="${reshh}" />
    <xacro:property name="resw"          value="${resww}" />

    <!-- Materials -->

    <material name="zed_mat_${numb}">
        <color rgba="0.8 0.8 0.8 0.8"/>
    </material>
    <material name="zedm_mat_${numb}">
        <color rgba="0 0 0 0.9"/>
    </material>
    <material name="zed2_mat_${numb}">
        <color rgba="0.25 0.25 0.25 0.99"/>
    </material>
    <material name="zed2i_mat_${numb}">
        <color rgba="0.25 0.25 0.25 0.99"/>
    </material>

    <xacro:if value="${model == 'zed'}">
        <xacro:property name="baseline" value="0.12" />
    </xacro:if>
    <xacro:if value="${model == 'zedm'}">
        <xacro:property name="baseline" value="0.06" />
    </xacro:if>
    <xacro:if value="${model == 'zed2'}">
        <xacro:property name="baseline" value="0.12" />
    </xacro:if>
    <xacro:if value="${model == 'zed2i'}">
        <xacro:property name="baseline" value="0.12" />
    </xacro:if>

<!-- Camera Center -->
    <joint name="camera_center_joint_${numb}" type="fixed">
        <parent link="$(arg base_frame)"/>
        <child link="camera_center_${numb}"/>
        <origin xyz="${cam_pos_x} ${cam_pos_y} ${cam_pos_z}" rpy="$(arg cam_roll) $(arg cam_pitch) ${rotate*M_PI}" />
    </joint>

    <link name="camera_center_${numb}">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <mesh filename="package://nexus_4wd_mecanum_description/meshes/${model}.stl" />
            </geometry>
            <material name="${model}_mat_${numb}" />
        </visual>
    </link>

<!-- Left Camera -->
    <joint name="left_camera_joint_${numb}" type="fixed">
        <parent link="camera_center_${numb}"/>
        <child link="left_camera_frame_${numb}"/>
        <origin xyz="0 ${baseline/2} 0" rpy="0 0 0" />
    </joint>

    <link name="left_camera_frame_${numb}" />

    <joint name="left_camera_optical_joint_${numb}" type="fixed">
        <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
        <parent link="left_camera_frame_${numb}"/>
        <child link="left_camera_optical_frame_${numb}"/>
    </joint>

    <link name="left_camera_optical_frame_${numb}"/>

    <joint name="right_camera_joint_${numb}" type="fixed">
        <parent link="camera_center_${numb}"/>
        <child link="right_camera_frame_${numb}"/>
        <origin xyz="0 -${baseline/2} 0" rpy="0 0 0" />
    </joint>

    <link name="right_camera_frame_${numb}" />

    <joint name="right_camera_optical_joint_${numb}" type="fixed">
        <origin xyz="0 0 0" rpy="-${M_PI/2} 0.0 -${M_PI/2}"/>
        <parent link="right_camera_frame_${numb}"/>
        <child link="right_camera_optical_frame_${numb}"/>
    </joint>

    <link name="right_camera_optical_frame_${numb}"/>

    <gazebo reference="left_camera_frame_${numb}">
        <sensor type="multicamera" name="stereo_camera">
        <update_rate>15.0</update_rate>
        <camera name="left">
            <horizontal_fov>1.91986218</horizontal_fov>
            <vertical_fov>1.22173048</vertical_fov>
            <diagonal_fov>2.0943951</diagonal_fov>
            <image>
                <width>${resw}</width>
                <height>${resh}</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
        </camera>
        <camera name="right">
            <pose>0 -0.12 0 0 0 0</pose>
            <horizontal_fov>1.91986218</horizontal_fov>
            <vertical_fov>1.22173048</vertical_fov>
            <diagonal_fov>2.0943951</diagonal_fov>
            <image>
                <width>${resw}</width>
                <height>${resh}</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.02</near>
                <far>300</far>
            </clip>
        </camera>
        <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
            <robotNamespace>/</robotNamespace>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera_${numb}</cameraName>
            <imageTopicName>image_rect</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>left_camera_optical_frame_${numb}</frameName>
            <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
            <hackBaseline>0.12</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
        <sensor name="depth_camera" type="depth">
        <update_rate>20</update_rate>
        <camera>
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>3</far>
          </clip>
        </camera>
        <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
          <updateRate>0.0</updateRate>
          <cameraName>camera_depth_${numb}</cameraName>
          <imageTopicName>/depth_camera_${numb}/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/depth_camera_${numb}/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/depth_camera_${numb}/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/depth_camera_${numb}/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/depth_camera_${numb}/depth/points</pointCloudTopicName>
          <frameName>left_camera_optical_frame_${numb}</frameName>
          <pointCloudCutoff>0.5</pointCloudCutoff>
          <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
        </sensor>
    </gazebo>

    <!-- <gazebo>
      <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <bodyName>base_footprint</bodyName>
            <topicName>ground_truth/left_camera_optical_frame_${numb}</topicName>
            <gaussianNoise>0.0</gaussianNoise>
            <frameName>world</frameName>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
      </plugin> 
  </gazebo> -->

</xacro:macro>
</robot>